"use strict";(async()=>{const e=['li[class*="css-"]'],t=['a[class*="css-"]',"div.content","tbody.clickable",'div[class*="container-"]','figure[class*="css-"]'],s=[],r=import(chrome.runtime.getURL("utils/hideTargets.js")),i=import(chrome.runtime.getURL("utils/getDefaultSelectors.js")),n=import(chrome.runtime.getURL("utils/getShadowDomTargetContent.js")),o=import(chrome.runtime.getURL("utils/hideShadowDomTargets.js")),[a,c,l,d]=await Promise.all([r,i,n,o]),g=c.getDefaultSelectors();let h=null;async function m(){await chrome.runtime.sendMessage({type:"GET_IS_BLOCKING"})?async function(){const r=await async function(){return await chrome.runtime.sendMessage({type:"GET_TARGETS"})}(),i=await chrome.runtime.sendMessage({type:"GET_STYLE"});a.hideTargets({targets:r,hideStyle:i,selectors:g,containerSelectors:e}),a.hideTargets({targets:r,hideStyle:i,selectors:g,containerSelectors:t}),d.hideShadowDomTargets({targets:r,hideStyle:i,shadowDomSelectors:s,getShadowDomTargetContentModule:l}),function({targets:s,hideStyle:r}){h&&h.disconnect(),h=new MutationObserver((i=>{a.hideTargets({targets:s,hideStyle:r,selectors:g,containerSelectors:e}),a.hideTargets({targets:s,hideStyle:r,selectors:g,containerSelectors:t})})),h.observe(document.body,{childList:!0,subtree:!0,characterData:!0})}({targets:r,hideStyle:i})}():async function(){h&&h.disconnect();document.querySelectorAll(".silent-blocking-extension").forEach((e=>{e.classList.remove("silent-blocking-extension"),e.classList.remove("hidden"),e.removeAttribute("data-silent-blocking-extension")}))}()}m(),chrome.runtime.onMessage.addListener((async(e,t,s)=>{if("REINIT_BLOCKING"===e.type)return m(),s(!0)}))})();